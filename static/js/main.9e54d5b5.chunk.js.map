{"version":3,"sources":["components/scss/CardContainer.module.scss","components/scss/Header.module.scss","components/scss/Search.module.scss","components/scss/Settings.module.scss","components/ts/Card.tsx","components/ts/CardContainer.tsx","components/ts/Clock.tsx","components/ts/Header.tsx","components/ts/Search.tsx","components/ts/Settings.tsx","index.tsx","components/scss/Card.module.scss"],"names":["module","exports","Card","props","className","styles","card","title","items","map","item","href","link","name","CardContainer","JSON","parse","localStorage","getItem","Clock","useState","hours","setHours","minutes","setMinutes","seconds","setSeconds","time","setTime","useEffect","setInterval","d","Date","getHours","padStart","getMinutes","getSeconds","Header","browserName","Bowser","window","navigator","userAgent","browser","startsWith","browserIcon","Chrome","Firefox","Opera","Safari","header","Helmet","rel","type","src","alt","onClick","e","target","anime","targets","rotate","duration","setTimeout","Search","onChange","_event","newValue","setState","value","onSuggestionsFetchRequested","fetch","replace","then","res","json","data","newSuggestions","suggestion","escapedValue","trim","filter","RegExp","test","suggestions","onSuggestionsClearRequested","onSubmit","event","preventDefault","state","location","this","inputProps","autoFocus","placeholder","theme","getSuggestionValue","s","renderSuggestion","Component","Settings","Modal","setAppElement","searchUrlConfig","bookmarksConfig","modalIsOpen","setModalIsOpen","settings","color","size","animation","isOpen","onRequestClose","onAfterOpen","document","getElementById","stringify","settingsModal","overlayClassName","modalOverlay","contentLabel","closeButton","id","spellCheck","saveButton","setItem","reload","ReactDOM","render"],"mappings":"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","file":"static/js/main.9e54d5b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"CardContainer\":\"CardContainer_CardContainer__3j4fm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__R-_dj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Search_container__3O5uZ\",\"input\":\"Search_input__2d_yV\",\"inputFocused\":\"Search_inputFocused__1EeQt\",\"inputOpen\":\"Search_inputOpen__2SMOY\",\"suggestionsContainer\":\"Search_suggestionsContainer__3ti0h\",\"suggestionsContainerOpen\":\"Search_suggestionsContainerOpen__E7LuZ\",\"suggestionsList\":\"Search_suggestionsList__1lKSv\",\"suggestion\":\"Search_suggestion__2cYgo\",\"suggestionHighlighted\":\"Search_suggestionHighlighted__1rNkv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__19jnm\",\"modalOverlay\":\"Settings_modalOverlay__3Zxva\",\"settingsModal\":\"Settings_settingsModal__gmT63\",\"header\":\"Settings_header__ventj\",\"title\":\"Settings_title__3KMTU\",\"closeButton\":\"Settings_closeButton__3clOF\",\"saveButton\":\"Settings_saveButton__1_lqy\"};","import React from \"react\";\nimport styles from \"../scss/Card.module.scss\";\n\nconst Card = (props) => {\n    return (\n        <div className={styles.card}>\n            <h3 className={styles.title}>{props.items[0]}</h3>\n            <ul>\n                {props.items[1].map((item) => (\n                    <a href={item.link}>\n                        <li>{item.name}</li>\n                    </a>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Card;\n","import React from \"react\";\nimport styles from \"../scss/CardContainer.module.scss\";\nimport Card from \"./Card\";\n\nconst CardContainer = () => {\n    const items: [] = JSON.parse(localStorage.getItem(\"bookmarks\") ?? \"[]\");\n\n    return (\n        <div className={styles.CardContainer}>\n            {items.map(item => <Card items={item} />)}\n        </div>\n    );\n};\n\nexport default CardContainer;\n","import React, { useState, useEffect } from \"react\";\n\nconst Clock = () => {\n    const [hours, setHours] = useState(\"--\");\n    const [minutes, setMinutes] = useState(\"--\");\n    const [seconds, setSeconds] = useState(\"--\");\n    const [time, setTime] = useState(\"\");\n\n    useEffect(() => {\n        setInterval(() => {\n            const d = new Date();\n            setHours(`${d.getHours() % 12 || 12}`.padStart(2, \"0\"));\n            setMinutes(`${d.getMinutes()}`.padStart(2, \"0\"));\n            setSeconds(`${d.getSeconds()}`.padStart(2, \"0\"));\n            setTime(`${d.getHours() >= 12 ? \"PM\" : \"AM\"}`);\n        }, 1000);\n    }, [seconds, minutes, hours, time]);\n\n    return (\n        <h5>\n            Good {time === \"AM\" ? \"morning\" : \"afternoon\"}. â€¢ {hours}:{minutes}:\n            {seconds} {time}\n        </h5>\n    );\n};\n\nexport default Clock;\n","import anime from \"animejs\";\nimport Bowser from \"bowser\";\nimport React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport styles from \"../scss/Header.module.scss\";\n\nconst Header = () => {\n    const browsers: { [key: string]: string } = {\n        Chrome: \"googlechrome\",\n        Firefox: \"firefoxbrowser\",\n        Opera: \"opera\",\n        \"Microsoft Edge\": \"microsoftedge\",\n        Safari: \"safari\",\n    };\n\n    let browserName =\n        Bowser.parse(window.navigator.userAgent).browser.name ?? \"\";\n    if (browserName.startsWith(\"Opera\")) browserName = \"Opera\";\n    else if (browserName === \"Chromium\") browserName = \"Chrome\";\n    const browserIcon = `https://simpleicons.org/icons/${browsers[browserName]}.svg`;\n\n    const logoAnimation = (e: any) => {\n        const target: HTMLElement = e.target;\n        anime({\n            targets: e.target,\n            rotate: \"360deg\",\n            duration: 1000,\n        });\n        setTimeout(() => {\n            anime({\n                targets: e.target,\n                rotate: \"0deg\",\n                duration: 0,\n            });\n        }, 1000);\n    };\n\n    return (\n        <div className={styles.header}>\n            <Helmet>\n                <link rel=\"shortcut icon\" href={browserIcon} type=\"image/x-icon\" />\n            </Helmet>\n            <img src={browserIcon} alt=\"Browser Logo\" onClick={logoAnimation} />\n            <h1>{browserName}</h1>\n        </div>\n    );\n};\n\nexport default Header;\n","import React, { Component, FormEvent } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport styles from \"../scss/Search.module.scss\";\n\nclass Search extends Component {\n    constructor() {\n        // @ts-ignore\n        super();\n        this.state = {\n            value: \"\",\n            suggestions: [],\n        };\n    }\n\n    onChange = (_event, { newValue }) => {\n        this.setState({ value: newValue });\n    };\n\n    onSuggestionsFetchRequested = ({ value }) => {\n        fetch(`/api/${value.replace(\" \", \"_\")}`)\n            .then((res) => res.json())\n            .then((data) => {\n                const newSuggestions: string[] = data[1];\n                let suggestion: string[] = [];\n                const escapedValue = value\n                    .trim()\n                    .replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n                if (escapedValue !== \"\")\n                    suggestion = newSuggestions.filter((item) =>\n                        new RegExp(`^${escapedValue}`, \"i\").test(item)\n                    );\n                this.setState({ suggestions: suggestion });\n            });\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({ suggestions: [] });\n    };\n\n    onSubmit = (event: FormEvent) => {\n        event.preventDefault();\n        // @ts-ignore\n        if (this.state.value.trim() !== \"\")\n            // @ts-ignore\n            window.location = localStorage\n                .getItem(\"search-url\")\n                // @ts-ignore\n                .replace(\"{query}\", this.state.value);\n    };\n\n    render() {\n        // @ts-ignore\n        const { value, suggestions } = this.state;\n        const inputProps = {\n            autoFocus: true,\n            onChange: this.onChange,\n            placeholder: \"Search The Web\",\n            value,\n        };\n\n        return (\n            <form onSubmit={this.onSubmit}>\n                <Autosuggest\n                    theme={styles}\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={\n                        this.onSuggestionsFetchRequested\n                    }\n                    onSuggestionsClearRequested={\n                        this.onSuggestionsClearRequested\n                    }\n                    getSuggestionValue={(s) => s}\n                    renderSuggestion={(s) => <span>{s}</span>}\n                    inputProps={inputProps}\n                />\n            </form>\n        );\n    }\n}\n\nexport default Search;\n","import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport \"boxicons\";\nimport styles from \"../scss/Settings.module.scss\";\n\nconst Settings = () => {\n    Modal.setAppElement(\"#root\");\n    const [modalIsOpen, setModalIsOpen] = useState(false);\n    let searchUrlConfig;\n    let bookmarksConfig;\n\n    const onAfterOpen = () => {\n        // @ts-ignore\n        searchUrlConfig = document.getElementById(\"search-url-config\");\n        // @ts-ignore\n        bookmarksConfig = document.getElementById(\"bookmarks-config\");\n        // @ts-ignore\n        searchUrlConfig.value = localStorage.getItem(\"search-url\");\n        // @ts-ignore\n        bookmarksConfig.value = JSON.stringify(\n            // @ts-ignore\n            JSON.parse(localStorage.getItem(\"bookmarks\")),\n            null,\n            4\n        );\n    };\n\n    const saveButtonOnClick = () => {\n        localStorage.setItem(\"search-url\", searchUrlConfig.value);\n        localStorage.setItem(\"bookmarks\", JSON.stringify(JSON.parse(bookmarksConfig.value)));\n        setTimeout(() => window.location.reload(), 500);\n    };\n\n    return (\n        <>\n            <div\n                className={styles.settings}\n                onClick={() => setModalIsOpen(true)}\n            >\n                <box-icon\n                    name=\"cog\"\n                    color=\"#949494\"\n                    size=\"md\"\n                    animation=\"spin-hover\"\n                ></box-icon>\n            </div>\n            <Modal\n                isOpen={modalIsOpen}\n                onRequestClose={() => setModalIsOpen(false)}\n                onAfterOpen={onAfterOpen}\n                className={styles.settingsModal}\n                overlayClassName={styles.modalOverlay}\n                contentLabel=\"Settings Modal\"\n            >\n                <div className={styles.header}>\n                    <h3 className={styles.title}>Startpage Settings</h3>\n                    <div\n                        className={styles.closeButton}\n                        onClick={() => setModalIsOpen(false)}\n                    >\n                        <box-icon\n                            name=\"x\"\n                            color=\"#949494\"\n                            size=\"md\"\n                            animation=\"flashing-hover\"\n                        ></box-icon>\n                    </div>\n                </div>\n                <h5>Search URL</h5>\n                <input type=\"text\" id=\"search-url-config\" />\n                <hr />\n                <h5>Bookmarks</h5>\n                <textarea id=\"bookmarks-config\" spellCheck={false}></textarea>\n                <div className={styles.saveButton} onClick={saveButtonOnClick}>\n                    <box-icon name=\"save\" color=\"#949494\"></box-icon>\n                    Save\n                </div>\n            </Modal>\n        </>\n    );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport CardContainer from \"./components/ts/CardContainer\";\nimport Clock from \"./components/ts/Clock\";\nimport Header from \"./components/ts/Header\";\nimport Search from \"./components/ts/Search\";\nimport Settings from \"./components/ts/Settings\";\n\nif (!localStorage.getItem(\"search-url\"))\n    localStorage.setItem(\"search-url\", \"https://google.com/search?q={query}\");\nif (!localStorage.getItem(\"bookmarks\"))\n    localStorage.setItem(\n        \"bookmarks\",\n        JSON.stringify([\n            [\n                \"Category 1\",\n                [\n                    { name: \"Bookmark 1\", link: \"//example.com\" },\n                    { name: \"Bookmark 2\", link: \"//example.com\" },\n                    { name: \"Bookmark 3\", link: \"//example.com\" },\n                ],\n            ],\n            [\n                \"Category 2\",\n                [\n                    { name: \"Bookmark 4\", link: \"//example.com\" },\n                    { name: \"Bookmark 5\", link: \"//example.com\" },\n                    { name: \"Bookmark 6\", link: \"//example.com\" },\n                ],\n            ],\n        ])\n    );\n\nReactDOM.render(\n    <>\n        <Header />\n        <Clock />\n        <Search />\n        <CardContainer />\n        <Settings />\n    </>,\n    document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1zqAy\",\"title\":\"Card_title__jLsT0\"};"],"sourceRoot":""}